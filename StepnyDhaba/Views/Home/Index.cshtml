@model Tuple<IEnumerable<SelectListItem>, IEnumerable<SelectListItem>, IEnumerable<SelectListItem>>
@{
    ViewBag.Title = "Index";
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Item").val(0); //To not select any value from dropdown initially
        $("#Item").change(function () {
            var itemId = $("#Item").val();
            GetItemUnitPrice(itemId)
        });

        $("input[type=text]").change(function () {
            CalculateSubTotal();
        });
        $("input[type=text]").keyup(function () {
            CalculateBalance();
        });

        $("#btnAddToList").click(function () {
            AddToTheItemList();
        });
        $("#btnPayment").click(function () {
            FinalPayment();
        });
    });

    //issue with the loop
    function FinalPayment() {
        var objOrderViewModel = {};
        var ListOfOrderDetailViewModel = new Array();
        //ListOfOrderDetailViewModel
        objOrderViewModel.PaymentTypeId = $('#PaymentType').val();
        objOrderViewModel.CustomerId = $('#Customer').val();
        objOrderViewModel.FinalTotal = $('#txtFinalTotal').val();
        console.log(objOrderViewModel.FinalTotal);

        //$('#tblRestaurantItemList').find('tr:gt(0)').each(function () {
            //var OrderDetailViewModel = {};
            //OrderDetailViewModel.Total = parseFloat($(this).find('td:eq(5)').text());
            //OrderDetailViewModel.itemId = parseFloat($(this).find('td:eq(0)').text());
            //OrderDetailViewModel.UnitPrice = parseFloat($(this).find('td:eq(2)').text());
            //OrderDetailViewModel.Quantity = parseFloat($(this).find('td:eq(3)').text());
            //OrderDetailViewModel.Discount = parseFloat($(this).find('td:eq(4)').text());
            //ListOfOrderDetailViewModel.push(OrderDetailViewModel);

        //});
        //FinalTotal = parseFloat(FinalTotal) + parseFloat(CurrentTotal);
        //$('#txtFinalTotal').val(parseFloat(FinalTotal).toFixed(2));
        //For Test
        
        var OrderDetailViewModel = {};
        OrderDetailViewModel.itemId = $("#Item").val();
        OrderDetailViewModel.UnitPrice = $("#txtUnitPrice").val();
        OrderDetailViewModel.Quantity = $("#txtQuantity").val();
        OrderDetailViewModel.Discount = $("#txtDiscount").val();
        OrderDetailViewModel.Total = (OrderDetailViewModel.UnitPrice * OrderDetailViewModel.Quantity) - OrderDetailViewModel.Discount;
        ListOfOrderDetailViewModel.push(OrderDetailViewModel);
        //End Test

        objOrderViewModel.ListOfOrderDetailViewModel = ListOfOrderDetailViewModel;

        $.ajax({
            async: true,
            type: "POST",
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(objOrderViewModel),
            url: '/Home/Index',
            success: function (data) {
                
            },
            error: function () {
                alert('There is an issue adding data')
            }

        });
    }

    function CalculateBalance() {
        var FinalAmount = $('#txtPaymentTotal').val();
        var PaymentAmount = $('#txtPaymentAmount').val();
        var ReturnAmount = $('#txtReturnTotal').val();
        var BalanceAmount = parseFloat(FinalAmount) - parseFloat(PaymentAmount) + parseFloat(ReturnAmount);
        $('#txtBalance').val(parseFloat(BalanceAmount).toFixed(2));

        if (parseFloat(BalanceAmount) == 0) {
            $('#btnPayment').removeAttr('disabled');
        }
        else {
            $('#btnPayment').attr('disabled', 'disabled');
        }
    }

    function RemoveItem(itemId) {
        $(itemId).closest('tr').remove();
    }

    function AddToTheItemList() {
        var tblItemList = $("#tblRestaurantItemList");
        var UnitPrice = $("#txtUnitPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();
        var ItemId = $("#Item").val();
        var ItemName = $("#Item option:selected").text();
        var Total = (UnitPrice * Quantity) - Discount;

        var ItemList = "<tr><td hidden>"
            + ItemId + "</td><td>"
            + ItemName + "</td><td>"
            + parseFloat(UnitPrice).toFixed(2) + "</td><td>"
            + parseFloat(Quantity).toFixed(2) + "</td><td>"
            + parseFloat(Discount).toFixed(2) + "</td><td>"
            + parseFloat(Total).toFixed(2) +
            "</td><td> <input type= 'button' value= 'Remove' name= 'remove' class='btn btn-danger' onclick = 'RemoveItem(this)'/> </td></tr>";

        tblItemList.append(ItemList);
        FinalItemTotal();
        ResetItem();
    }

    var FinalTotal = 0;
    function FinalItemTotal() {
        var CurrentTotal = $('#txtTotal').val();
        FinalTotal = parseFloat(FinalTotal) + parseFloat(CurrentTotal);
        $('#txtFinalTotal').val(parseFloat(FinalTotal).toFixed(2));
        //$("#txtFinalTotal").val('0.00');
        //var FinalTotal = 0.00;
        ////to add value greater than 0 "tr:gt(0)" and to find the position where total is added "td:eq(5)"
        ////parseFloat($(this).find("td:eq(5)").text());
        //$("#tblRestaurantItemList").find('tr').slice(1).each(function () {
        //    var Total = $(this).find('td').eq(5).text();
        //    console.log(Total);
        //    FinalTotal += Total;
        //});
        //$("#txtFinalTotal").val(parseFloat(FinalTotal).toFixed(2)); 
        $("#txtPaymentTotal").val(parseFloat(FinalTotal).toFixed(2));
        $("#txtBalance").val(parseFloat(FinalTotal).toFixed(2));
    }

    function ResetItem() {
        $("#txtUnitPrice").val('');
        $("#txtQuantity").val('');
        $("#txtDiscount").val('0.00');
        $("#Item").val(0);
        $("#txtTotal").val('');

    }

    function CalculateSubTotal() {
        var UnitPrice = $("#txtUnitPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();

        var Total = (UnitPrice * Quantity) - Discount;

        $("#txtTotal").val(parseFloat(Total).toFixed(2));
    }

    function GetItemUnitPrice(itemId) {
        $.ajax({
            async: true,
            type: "GET",
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: { itemId: itemId },
            url: '/home/getItemUnitPrice',
            success: function (data) {
                $("#txtUnitPrice").val(parseFloat(data).toFixed(2));
            },
            error: function () {
                alert('There is an issue displaying the unit price')
            }



        });
    }
</script>
<style>
    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        xmin-width: 0;
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 10px !important;
    }

    legend {
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #ddd;
        margin-bottom: 0;
        width: 35%;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #ffffff;
    }
</style>


<fieldset>
    <legend>
        Restaurant
    </legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @*Item1, Item2 and Item3 are defined in the same order as defined in Tuple.*@
                    Customer :
                    @Html.DropDownList("Customer",new SelectList(Model.Item1,"Value", "Text"),
                    new {@class = "form-control"})
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Payment Type :
                    @Html.DropDownList("PaymentType",new SelectList(Model.Item3,"Value", "Text"),
                    new {@class = "form-control"})
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Total :
                    <input type="text" style="text-align:right" readonly="readonly" id="txtFinalTotal" value="0.00" name="FinalTotal" class="form-control" />
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset>
    <legend>
        Restaurant Items
    </legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Item :
                    @Html.DropDownList("Item",new SelectList(Model.Item2,"Value", "Text"),
                    new {@class = "form-control"})
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Unit Price :
                    <input type="text" style="text-align:right" readonly="readonly" id="txtUnitPrice" value="0.00" name="UnitPrice" class="form-control" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Quantity :
                    <input type="text" style="text-align:right" id="txtQuantity" value="0.00" name="Quantity" class="form-control" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Discount :
                    <input type="text" style="text-align:right" id="txtDiscount" value="0.00" name="Discount" class="form-control" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Total :
                    <input type="text" style="text-align:right" readonly="readonly" id="txtTotal" value="0.00" name="Total" class="form-control" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <input type="button" style="margin-top:20px;" value="Add To List" name="AddToList" id="btnAddToList" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
</fieldset>
<fieldset>
    <legend>Listed Items</legend>
    <table style="width:100%" id="tblRestaurantItemList">
        <thead>
            <tr id="trRestaurantItemList">
                <th hidden>Item Id</th>
                <th>Item Name</th>
                <th>Unit Price</th>
                <th>Quantity</th>
                <th>Discount</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
    </table>
</fieldset>
<div style="margin-top:20px">
    @*Used data-backdrop and data-keydrop so that the popup screen doesn't get closed if the user clicks outside it*@
    <input data-backdrop="static" data-keydrop="false" data-toggle="modal" data-target="#divPayment" type="button" style="float:right" value="Checkout" name="checkout" id="btnCheckOut" class="btn btn-primary" />
</div>

<div id="divPayment" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Payment</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="form-group col-md-6">
                            Payment Total:
                            <input type="text" style="text-align:right" readonly="readonly" id="txtPaymentTotal" value="0.00" name="PaymentTotal" class="form-control" />
                        </div>
                        <div class="form-group col-md-6">
                            Payment Amount:
                            <input type="text" style="text-align:right" id="txtPaymentAmount" value="0.00" name="PaymentAmount" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            Return Total:
                            <input type="text" style="text-align:right" id="txtReturnTotal" value="0.00" name="ReturnTotal" class="form-control" />
                        </div>
                        <div class="form-group col-md-6">
                            Balance Amount:
                            <input type="text" style="text-align:right" readonly="readonly" id="txtBalance" value="0.00" name="BalanceAmount" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" id="btnPayment" value="Payment">Payment</button>
                <button class="btn btn-danger" id="btnClose" data-dismiss="modal" value="Close">Close</button>
            </div>
        </div>
    </div>
</div>

